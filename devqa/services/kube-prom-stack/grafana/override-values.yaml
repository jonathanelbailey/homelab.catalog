crds:
  enabled: false

## Provide a name to substitute for the full names of resources
##
fullnameOverride: "grafana"

grafana:

  defaultDashboardsTimezone: browser
  sidecar:
    dashboards:
      provider:
        allowUiUpdates: true
    datasources:
      # URL of prometheus datasource
      url: http://prometheus-prometheus.observability:9090/

      # Field with internal link pointing to existing data source in Grafana.
      # Can be provisioned via additionalDataSources
      exemplarTraceIdDestinations:
        datasourceUid: jaeger_tracing_query
        traceIdLabelName: trace_id
      alertmanager:
        enabled: true
        uid: alertmanager
        handleGrafanaManagedAlerts: true
        implementation: prometheus

  # Configure additional grafana datasources (passed through tpl)
  # ref: http://docs.grafana.org/administration/provisioning/#datasources
  additionalDataSources:
  - name: Jaeger
    editable: false
    orgId: 1
    type: jaeger
    url: http://jaeger-tracing-query.jaeger-tracing:80
    # UID should match the datasourceUid in derivedFields.
    uid: jaeger_tracing_query
    jsonData:
        tracesToLogsV2:
          # Field with an internal link pointing to a logs data source in Grafana.
          # datasourceUid value must match the uid value of the logs data source.
          datasourceUid: 'loki'
          spanStartTimeShift: '1h'
          spanEndTimeShift: '-1h'
          tags: ['job', 'instance', 'pod', 'namespace']
          filterByTraceID: false
          filterBySpanID: false
          customQuery: true
          query: 'method="$${__span.tags.method}"'
        tracesToMetrics:
          datasourceUid: 'prom'
          spanStartTimeShift: '1h'
          spanEndTimeShift: '-1h'
          tags: [{ key: 'service.name', value: 'service' }, { key: 'job' }]
          queries:
            - name: 'Sample query'
              query: 'sum(rate(traces_spanmetrics_latency_bucket{$$__tags}[5m]))'
        nodeGraph:
          enabled: true
        traceQuery:
          timeShiftEnabled: true
          spanStartTimeShift: '1h'
          spanEndTimeShift: '-1h'
        spanBar:
          type: 'None'
  - name: Loki
    editable: false
    orgId: 1
    type: loki
    url: http://loki.grafana:3100
    uid: loki
    jsonData:
      timeout: 60
      maxLines: 1000
      derivedFields:
        # Field with internal link pointing to data source in Grafana.
        # datasourceUid value can be anything, but it should be unique across all defined data source uids.
        - datasourceUid: jaeger_tracing_query
          matcherRegex: "traceID=(\\w+)"
          name: TraceID
          # url will be interpreted as query for the datasource
          url: '$${__value.raw}'
          # optional for URL Label to set a custom display label for the link.
          urlDisplayLabel: 'View Trace'
        # Field with external link.
        - matcherRegex: "traceID=(\\w+)"
          name: TraceID
          url: 'http://jaeger-tracing-query.jaeger-tracing:80/trace/$${__value.raw}'
  
  assertNoLeakedSecrets: false

  grafana.ini:
    server:
      domain: "internal.magiccityit.com"
      root_url: "https://grafana.internal.magiccityit.com"
    auth:
      signout_redirect_url: "https://authentik.company/application/o/<Slug of the application from above>/end-session/"
      oauth_auto_login: true
    auth.anonymous:
      enabled: false
      org_name: Magic City IT
    auth.generic_oauth:
      name: authentik
      enabled: true
      client_id: "qtCwRyvem8cZr0yBbAdg7hiZZMMEpj0ToOm6wau2"
      client_secret: "zpZn7WgyCw4QklGuEmxJpJR63rFZidGOF9695unYRTeephHib0JxwXjAWMF5UIeH1EdzYSApGjtDSnACi0bPWMy6nwbYenJwwPSINKt3P7G3r0lCgeGBwy1TNPjvh1Qy"
      scopes: "openid profile email"
      auth_url: "https://authentik.internal.magiccityit.com/application/o/authorize/"
      token_url: "https://authentik.internal.magiccityit.com/application/o/token/"
      api_url: "https://authentik.internal.magiccityit.com/application/o/userinfo/"
      # Optionally map user groups to Grafana roles
      role_attribute_path: contains(groups, 'Grafana Admins') && 'Admin' || contains(groups, 'Grafana Editors') && 'Editor' || 'Viewer'


defaultRules:
  create: false

global:
  rbac:
    create: false

alertmanager:
  enabled: false

## Flag to disable all the kubernetes component scrapers
##
kubernetesServiceMonitors:
  enabled: false

## Component scraping the kube api server
##
kubeApiServer:
  enabled: false

## Component scraping the kubelet and kubelet-hosted cAdvisor
##
kubelet:
  enabled: false

kubeControllerManager:
  enabled: false

## Component scraping coreDns. Use either this or kubeDns
##
coreDns:
  enabled: false

## Component scraping kube scheduler
##
kubeScheduler:
  enabled: false

## Component scraping kube proxy
##
kubeProxy:
  enabled: false

## Component scraping kube state metrics
##
kubeStateMetrics:
  enabled: false

## Deploy node exporter as a daemonset to all nodes
##
nodeExporter:
  enabled: false

## Manages Prometheus and Alertmanager components
##
prometheusOperator:
  enabled: false

## Deploy a Prometheus instance
##
prometheus:
  enabled: false

## Configuration for thanosRuler
## ref: https://thanos.io/tip/components/rule.md/
##
thanosRuler:

  ## Deploy thanosRuler
  ##
  enabled: false

