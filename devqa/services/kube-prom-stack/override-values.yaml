crds:
  enabled: false

## Provide a name to substitute for the full names of resources
##
fullnameOverride: "prometheus"

alertmanager:
  alertmanagerSpec:
    resources:
      requests:
        memory: 400Mi
        cpu: 200m
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: "harvester"
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 20Gi
          selector: {}

grafana:
  enabled: false
kube-state-metrics:
  selfMonitor:
    enabled: true
nodeExporter:
  enabled: true
  operatingSystems:
    linux:
      enabled: true
    darwin:
      enabled: false
prometheus-node-exporter:
  # extraArgs: 
  # - --path.rootfs: /host/root
  # extraHostPathMounts: 
  #   - name: root
  #     mountPath: /host/root
  #     hostPath: /
  #     readOnly: true
  #     mountPropagation: HostToContainer
  # extraArgs:
  # - --path.rootfs=/host
  # - --collector.filesystem.mount-points-exclude=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/.+)($|/)
  # - --collector.filesystem.fs-types-exclude=^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tracefs)$
  hostRootFsMount:
    enabled: true
    mountPropagation: None

cleanPrometheusOperatorObjectNames: true

prometheus:
  prometheusSpec:
    resources:
      requests:
        memory: 16384Mi
        cpu: 2000m
    
    exemplars: 
      ## Maximum number of exemplars stored in memory for all series.
      ## If not set, Prometheus uses its default value.
      ## A value of zero or less than zero disables the storage.
      maxSize: 100000

    # EnableFeatures API enables access to Prometheus disabled features.
    # ref: https://prometheus.io/docs/prometheus/latest/disabled_features/
    enableFeatures: 
    - exemplar-storage

    retention: 90d
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: "harvester"
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 50Gi
          selector: {}
    ruleSelectorNilUsesHelmValues: false
    # ruleSelector:
    #   any: true
    serviceMonitorSelectorNilUsesHelmValues: false
    # serviceMonitorSelector:
    #   monitoring: prometheus
    # serviceMonitorNamespaceSelector:
    #   monitoring: prometheus
    podMonitorSelectorNilUsesHelmValues: false
    # podMonitorSelector:
    #   any: true
    # probeSelector:
    #   any: true
    # scrapeConfigSelector:
    #   any: true
