istio_namespace: istio-system
deployment:
  # This only limits what Kiali will attempt to see, but Kiali Service Account has permissions to see everything.
  # For more control over what the Kial Service Account can see, use the Kiali Operator
  accessible_namespaces:
  - "**"
  resources:
    limits:
      cpu: 500m
      memory: 256Mi
  logger:
    log_format: "text"
    log_level: "warn"
    time_field_format: "2006-01-02T15:04:05Z07:00"
    sampler_rate: "1"
auth:
  strategy: openid
  openid:
    authentication_timeout: 3600
    authorization_endpoint: https://authentik.internal.magiccityit.com/application/o/authorize/
    client_id: I1AAR9Xlm361f8xW9MPqCWQRdPdBW0EBhKFjJnOB
    disable_rbac: true
    issuer_uri: https://authentik.internal.magiccityit.com/application/o/kiali/
    scopes: ["openid", "profile", "email"]
    username_claim: "email"
external_services:
  custom_dashboards:
    enabled: true
    is_core: true
    namespace_label: "kubernetes_namespace"
    prometheus:
      auth:
        type: none
      url: http://prometheus-prometheus.observability:9090
  grafana:
    enabled: true
    auth:
      username: admin
      password: prom-operator
      type: basic
    # Grafana service name is "grafana" and is in the "telemetry" namespace.
    in_cluster_url: http://grafana.observability:3000
    # Public facing URL of Grafana
    url: https://grafana.internal.magiccityit.com

  tracing:
    # Enabled by default. Kiali will anyway fallback to disabled if
    # Jaeger is unreachable.
    enabled: true
    # Jaeger service name is "tracing" and is in the "telemetry" namespace.
    # Make sure the URL you provide corresponds to the non-GRPC enabled endpoint
    # if you set "use_grpc" to false.
    in_cluster_url: 'http://jaeger-tracing-query.jaeger-tracing:16685/jaeger'
    use_grpc: true
    is_core: true
    # Public facing URL of Jaeger
    url: 'https://jaeger.internal.magiccityit.com'

  prometheus:
    auth:
      type: none
    cache_duration: 10
    cache_enabled: true
    cache_expiration: 300
    health_check_url: ""
    is_core: true
    # Prometheus service name is "metrics" and is in the "telemetry" namespace
    url: http://prometheus-prometheus.observability:9090

  istio:
    component_status:
      enabled: true
    config_map_name: istio
    envoy_admin_local_port: 15000
    istio_identity_domain: svc.cluster.local
    istio_injection_annotation: "sidecar.istio.io/inject"
    istio_sidecar_injector_config_map_name: "istio-sidecar-injector"
    istiod_deployment_name: "istiod"
    ingress_gateway_namespace: "istio-ingress"
    root_namespace: istio-system

identity: {}

istio_labels:
  app_label_name: "app"
  egress_gateway_label: "istio=egressgateway"
  ingress_gateway_label: "istio=gateway"
  injection_label_name: "istio-injection"
  injection_label_rev: "istio.io/rev"
  version_label_name: "version"

kiali_feature_flags:
  istio_injection_action: true
  # istio_upgrade_action: true
  certificates_information_indicators:
    enabled: true
    secrets:
    - cacerts
    - istio-ca-secret
  clustering:
    autodetect_secrets:
      enabled: true
      label: "kiali.io/multiCluster=true"
    clusters: []
  disabled_features: []
  validations:
    ignore: ["KIA1201"]

# login_token:
#   signing_key: ""

server:
  gzip_enabled: true
  port: 20001
  observability:
    metrics:
      enabled: true
      port: 9090
    # tracing:
    #   collector_type: "jaeger"
    #   collector_url: "http://jaeger-tracing-collector.jaeger-tracing:14268/api/traces"
    #   enabled: true
  web_fqdn: kiali.internal.magiccityit.com
  web_port: "443"
  web_root: "/kiali"
  web_schema: "https"