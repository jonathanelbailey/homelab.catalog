# revision: "1-23-2"
# revisionTags: ["stable"]

# pilot:
#   env:
#     DEFAULT_WORKLOAD_CERT_TTL: 1m
#     MAX_WORKLOAD_CERT_TTL: 1m


meshConfig:
  enablePrometheusMerge: true
  accessLogFile: /dev/stdout
  accessLogFormat: |
    [%START_TIME%] "%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%" %RESPONSE_CODE% %RESPONSE_FLAGS% %RESPONSE_CODE_DETAILS% %CONNECTION_TERMINATION_DETAILS% "%UPSTREAM_TRANSPORT_FAILURE_REASON%" %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% "%REQ(X-FORWARDED-FOR)%" "%REQ(USER-AGENT)%" "%REQ(X-REQUEST-ID)%" "%REQ(:AUTHORITY)%" "%UPSTREAM_HOST%" %UPSTREAM_CLUSTER% %UPSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_REMOTE_ADDRESS% %REQUESTED_SERVER_NAME% %ROUTE_NAME% traceID=%REQ(x-b3-traceid)%
  enableTracing: true
  defaultConfig:
    tracing:
      sampling: 100
      max_path_tag_length: 99999
      zipkin:
        address: jaeger-tracing-collector.jaeger-tracing:9411
  extensionProviders:
  - name: "authentik"
    envoyExtAuthzHttp:
        # Replace with <service-name>.<namespace>.svc.cluster.local
        service: "ak-outpost-authentik-embedded-outpost.authentik.svc.cluster.local"
        port: "9000"
        pathPrefix: "/outpost.goauthentik.io/auth/envoy"
        headersToDownstreamOnAllow:
        - cookie
        headersToUpstreamOnAllow:
        - set-cookie
        - x-authentik-*
        # Add authorization headers to the allow list if you need proxy providers which
        # send a custom HTTP-Basic Authentication header based on values from authentik
        # - authorization
        includeRequestHeadersInCheck:
        - cookie
base:
  enableIstioConfigCRDs: false
  validateGateway: false
